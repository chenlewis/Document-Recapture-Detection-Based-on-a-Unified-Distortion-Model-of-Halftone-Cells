%% lpi = 150, halftone angle = 45 degrees
%% clear workspace
close all;
clear;
clc;
%% 
% the cell size
cell_half_diag = 4;
inverse_screen_freq = cell_half_diag * 2;
% the number of grayscale levels
num_gray_levels = (cell_half_diag * sqrt(2))^2 + 1;
% the single halftone cell: only within the mask regions, should have 32 nonzero entries
screen_cell_mask = [0 0 0 1 1 0 0 0;...
                    0 0 1 1 1 1 0 0;...
                    0 1 1 1 1 1 1 0;...
                    1 1 1 1 1 1 1 1;...
                    0 1 1 1 1 1 1 0;...
                    0 0 1 1 1 1 0 0;...
                    0 0 0 1 1 0 0 0;...
                    0 0 0 0 0 0 0 0];
% calculat the distances (normalized)
[screen_cell_coord_x, screen_cell_coord_y] = meshgrid((-cell_half_diag + 0.5):(cell_half_diag - 0.5), ...
                                                      (cell_half_diag - 1):-1:(-cell_half_diag + 1));
screen_cell_coord_x(end + 1, :) = 0;
screen_cell_coord_y(end + 1, :) = 0;
screen_cell_dist = sqrt(screen_cell_coord_x.^2 + screen_cell_coord_y.^2) .* screen_cell_mask;
screen_cell_dist_normal = screen_cell_dist ./ max(screen_cell_dist(:));
% constuct the gray levels: this might not be right. (the old screen levels)
t = fliplr(round(linspace(1, 255 - (255 / (num_gray_levels - 1)), num_gray_levels - 1)));
% the single halftone cell
screen_cell = [0     0     0     t(27) t(28)	0   	0      0; ...
               0     0     t(17) t(13) t(14)  t(18)	0      0; ...
               0     t(23) t(9)  t(3)  t(4)   t(10)	t(24)  0; ...
               t(31) t(22) t(7)  t(1)  t(2)   t(8)  t(19)  t(32); ...
               0     t(26) t(12) t(6)  t(5)   t(11)	t(25)	 0; ...
               0     0     t(21) t(16) t(15)  t(20)	0      0; ...
               0     0     0     t(30) t(29)  0      0     0; ...
               0     0     0     0     0      0      0     0];
% save the genreated screens
save('screen_cell_45_33.mat', 'screen_cell');